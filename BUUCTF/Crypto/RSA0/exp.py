# e=16498901

# p+q=21575876445400459792685149440669307822289572678651918363606707678430314087134444289241993915198008053624246760971517137369110405366181020376133012960710458

# p-q=-

# c=94261156592221636147758682741518702876618661860488681266160203372134651038690790537212072117566379813949057785679768472601202190770020568854017619628156253003974528900108155534213444574097628072402632921852550607856792224324427376028218918171275128972454533133790569196772525150896874804868766044721080329471

# flag=??????
from gmpy2 import *
from Crypto.Util.number import long_to_bytes

pplusq = mpz(21575876445400459792685149440669307822289572678651918363606707678430314087134444289241993915198008053624246760971517137369110405366181020376133012960710458)
pminusq = mpz(-1538686067003638642136899509892552914157357442633264471665441671223034863293018471996738813004977485092045952273060399618430074608171958506176212289683124)

# print(pminusq)
p = mpz((pminusq + pplusq) // 2)
q = mpz((pplusq - pminusq) // 2)
print("p: ", p)
print("q: ", q)
e = 16498901
c = mpz(94261156592221636147758682741518702876618661860488681266160203372134651038690790537212072117566379813949057785679768472601202190770020568854017619628156253003974528900108155534213444574097628072402632921852550607856792224324427376028218918171275128972454533133790569196772525150896874804868766044721080329471)

d = invert(e, (p-1)*(q-1))
n = p*q
print("n: ", n)
m = powmod(c, d, p*q)
print(long_to_bytes(m))